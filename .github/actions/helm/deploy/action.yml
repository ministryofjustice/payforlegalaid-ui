name: "Deploy Helm Chart"
description: "Deploy a Helm chart to a Kubernetes cluster."
inputs:
  chart-dir:
    description: "The directory where the Helm chart is located"
    required: true
  release-name:
    description: "The name of the Helm release"
    required: true
  namespace:
    description: "The Kubernetes namespace for deployment"
    required: true
  repository:
    description: "The Docker repository name"
    required: true
  image-tag:
    description: "The Docker image tag"
    required: true
  build-number:
    description: "The build number"
    required: true
  app-version:
    description: "The application version"
    required: true
  git-ref:
    description: "The Git reference (e.g., commit SHA)"
    required: true
  environment:
    description: "The target environment (e.g., DEV, UAT, PROD)"
    required: true
  registry:
    description: "ECR Registry URL"
    required: true
  manifest:
    description: "Base64-encoded custom values.yaml for Helm (overrides defaults)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [ ! -d "${{ inputs.chart-dir }}" ]; then
          echo "::error::Chart directory does not exist: ${{ inputs.chart-dir }}"
          exit 1
        fi
        if [[ ! "${{ inputs.environment }}" =~ ^(DEV|UAT|PROD)$ ]]; then
          echo "::error::Invalid environment: ${{ inputs.environment }}"
          exit 1
        fi  

    - name: Dry-run Helm deployment
      shell: bash
      run: |
        helm upgrade --install "${{ inputs.release-name }}" "${{ inputs.chart-dir }}" \
          --namespace "${{ inputs.namespace }}" \
          --dry-run \
          --debug


    - name: Deploy Helm chart
      shell: bash
      run: |
        set -e  # Fail the script on any error
        
        CHART_DIR="${{ inputs.chart-dir }}"
        RELEASE_NAME="${{ inputs.release-name }}"
        NAMESPACE="${{ inputs.namespace }}"
        REPOSITORY="${{ inputs.registry }}/${{ inputs.repository }}"
        echo ${{ inputs.manifest }} | base64 -d > new-values.yaml
        
        echo "Deploying Helm chart..."
        helm upgrade --install $RELEASE_NAME $CHART_DIR \
          --namespace $NAMESPACE \
          -f new-values.yaml \
          --set image.repository=$REPOSITORY \
          --set image.tag=${{ inputs.image-tag }} \
          --set build.number=${{ inputs.build-number }} \
          --set app.version=${{ inputs.app-version }} \
          --set git.ref=${{ inputs.git-ref }} \
          --atomic \
          --timeout 5m \
          --wait
        
        echo "Helm chart deployed successfully to ${{ inputs.environment }}"