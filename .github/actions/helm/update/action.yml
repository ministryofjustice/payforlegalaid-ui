name: "Update values.yaml"
description: "Update the image.tag field in values.yaml with the provided image tag."
branding:
  icon: 'package'
  color: 'green'

inputs:
  chart-dir:
    description: "The directory where the Helm chart is located"
    required: true
  image-tag:
    description: "The image tag to update in values.yaml"
    required: true
  values-file:
    description: "Name of values file (default: values.yaml)"
    default: "values.yaml"
    required: false
  namespace:
    description: "The Kubernetes namespace for deployment"
    required: true
  app-host:
    description: "The hostname for the Kubernetes Ingress (e.g., 'app.example.com')"
    required: true
outputs:
  helm_manifest:
    description: '"Base64-encoded custom values.yaml for Helm (overrides defaults)"'
    value: ${{ steps.update-config.outputs.helm_manifest }}

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        # Validate chart directory
        if [ ! -d "${{ inputs.chart-dir }}" ]; then
          echo "::error::Chart directory does not exist: ${{ inputs.chart-dir }}"
          exit 1
        fi

        if [ ! -f "${{ inputs.chart-dir }}/Chart.yaml" ]; then
          echo "::error::Chart.yaml not found in ${{ inputs.chart-dir }}"
          exit 1
        fi

        # Validate image tag format (Docker spec)
        if ! echo "${{ inputs.image-tag }}" | grep -Eq '^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,127}$'; then
          echo "::error::Invalid image tag format: ${{ inputs.image-tag }}"
          exit 1
        fi

    - name: Verify yq is installed
      shell: bash
      run: |
        if ! command -v yq &> /dev/null; then
          echo "::error::yq is required but not installed. Install with: 'pip install yq'"
          exit 1
        fi

    - name: Update values file
      id: update-config
      shell: bash
      run: |
        VALUES_PATH="${{ inputs.chart-dir }}/${{ inputs.values-file }}"
        APP_NAMESPACE=${{ inputs.namespace }}
        APP_HOST="${{ inputs.app-host }}" 
        
        if [ ! -f "$VALUES_PATH" ]; then
          echo "::error::Values file not found: $VALUES_PATH"
          exit 1
        fi
    
        yq eval ".image.tag = \"${{ inputs.image-tag }}\"" -i "$VALUES_PATH" || {
          echo "::error::Failed to update image tag"
          exit 1
        }
        
        yq eval ".namespace = \"$APP_NAMESPACE\"" -i "$VALUES_PATH"
        yq eval ".ingress.rules[0].host = \"$APP_HOST\"" -i "$VALUES_PATH"
        yq eval ".ingress.tls[0].hosts[0] = \"$APP_HOST\"" -i "$VALUES_PATH"
        
        ENV_FILE="$(cat "$VALUES_PATH" | base64 -w 0)"
        
        echo "helm_manifest=$ENV_FILE" >> $GITHUB_OUTPUT
